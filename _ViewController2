
import Foundation
import UIKit
import Alamofire
import SwiftyJSON
import MJRefresh
import SDWebImage

class ViewController2: UIViewController {
    
    
    fileprivate var currentTabelView:UITableView?
    fileprivate var detailDataModel:DetailData?
    fileprivate var dataArray:NSMutableArray?
    var tableView = UITableView()
    let header = MJRefreshNormalHeader()
    
    fileprivate var dataModel:Welcome?
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = UIColor.white
        navigationItem.title = "知乎日报"
        initTable()
        header.setRefreshingTarget(self, refreshingAction: #selector(ViewController.headerRefresh))
        self.tableView.mj_header = header
    }
    func initTable() {
        tableView = UITableView(frame: CGRect(x: 0, y:0, width: view.frame.width, height: view.frame.height),style: .grouped)
        tableView.delegate = self as? UITableViewDelegate
        tableView.dataSource = self as? UITableViewDataSource
        tableView.allowsSelection = true
        tableView.register(UITableViewCell.self, forCellReuseIdentifier: "cell")
        view.addSubview(tableView)
    }
    
    @objc func headerRefresh(){
        sleep(1)
        loadNewData()
        print(detailDataModel?.body)
        self.tableView.reloadData()
        header.endRefreshing()
        }
    
    func loadNewData(){
        
        let urlString = "https://news-at.zhihu.com/api/4/news/3930445"
        //            + dataModel?.stories[indexPath].id
        let parameters:[String : Any] = [:]
        weak var weakSelf = self
            SwiftNetWorkManager.sharedInstance.getRequest(urlString, params:   parameters, success: { (dictResponse) in
            weakSelf?.currentTabelView?.mj_header?.endRefreshing()
                let loaclData = dictResponse as Data
                do {
                    weakSelf?.detailDataModel = try JSONDecoder().decode(DetailData.self, from: loaclData)
                    weakSelf?.currentTabelView?.reloadData()
                } catch {
                    print("error")
                }
            }) { (error) in
                    print("错误")
            }
        self.tableView.reloadData()
    }
    
}

extension ViewController2:UITableViewDelegate,UITableViewDataSource{
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let identify:String = "cell"
        let cell = tableView.dequeueReusableCell(withIdentifier: identify, for: indexPath)
        as UITableViewCell
        cell.accessoryType = .disclosureIndicator
        cell.textLabel?.text = detailDataModel?.title
        cell.textLabel?.font = UIFont.systemFont(ofSize: 15)//字体大小
        return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 2
    }
    
    
    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        return ""
    }

    func tableView(_ tableView: UITableView, titleForFooterInSection section: Int) -> String? {
        return ""
    }

    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 10
    }

    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int)
        -> UIView? {
        return UIView()
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if indexPath.row == 0 {
            return 100
        }
        return 800
    }
    
//    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//           navigationController?.pushViewController(ViewController2(), animated: true)
//           tableView.deselectRow(at: indexPath, animated: true)
//       }
}
